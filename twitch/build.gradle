plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.10'
	id 'io.spring.dependency-management' version '1.1.3'
}


group = 'com.laioffer'
version = '0.0.1-SNAPSHOT'


java {
	sourceCompatibility = '17'
}


repositories {
	mavenCentral()
}


dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:2022.0.1"
	}
}


dependencies {
	implementation 'com.github.javafaker:javafaker:1.0.2'
	//用这个faker来帮我们随机的生成一些动态的数据
	implementation 'com.github.ben-manes.caffeine:caffeine:3.+'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
//	这个跟你用什么SQL没有关系,用其他的SQL也可以用这个jdbc的library
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'org.springframework.security:spring-security-oauth2-client'
	runtimeOnly 'com.mysql:mysql-connector-j'
//	运行的时候才需要, 只需要jdbc这个library在运行的时候连上, 否则打包进来的文件可能过大
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}


tasks.named('test') {
	useJUnitPlatform()
}
